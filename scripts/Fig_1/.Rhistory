p_value <- 1 - pchisq(test$chisq, length(test$n) - 1)
p_value = (paste("log-rank test p-value:", format(p_value, scientific = T)))
# plotting
summary(km_recur_site_seq, times = c(0,1*(1:7)))
plot(km_recur_site_seq,conf.int = FALSE,xlim = c(0,7), ylim = c(0,1), col = c("red","blue","green","purple"),ylab = "% survival",xlab = "years",mark.time = TRUE, cex = 0.5,yscale = 100,xaxs = "S", main = p_value)
#KM RFS recurrence site, days from diagnosis seq cohort
# create a survival object
dt_ = rbind(retrospective_recur_lung_seq,retrospective_recur_liver_seq)
s_obj = with(dt_, Surv(days_to_recurrance_or_death/365, recur_status))
# fit survival curves using survfit()
km_rfs_recur_site_seq <- survfit(s_obj ~ recur_site, data = dt_)
# perform a log-rank test using survdiff() to get the p-value
test <- survdiff(s_obj ~ recur_site, data = dt_)
# extract the p-value
p_value <- 1 - pchisq(test$chisq, length(test$n) - 1)
p_value = (paste("log-rank test p-value:", format(p_value, scientific = T)))
# plotting
summary(km_rfs_recur_site_seq, times = c(0,1*(1:7)))
plot(km_rfs_recur_site_seq,conf.int = FALSE,xlim = c(0,7), ylim = c(0,1), col = c("red","blue","green","purple"),ylab = "% survival",xlab = "years",mark.time = TRUE, cex = 0.5,yscale = 100,xaxs = "S", main = p_value)
knitr::opts_chunk$set(echo = TRUE)
#Load packages
library(lubridate)
library(survival)
library(ggplot2)
library(ggfortify)
library(ranger)
library(dplyr)
library(zip)
library(ggpubr)
library(survminer)
library(swimplot)
library(scales)
#Uploading data
retrospective = read.csv("../../Misc/fullcohort.csv",stringsAsFactors = F)
retrospective = retrospective %>% filter(is.na(id) == FALSE)
retrospectiveseq = read.csv("../../Misc/seqcohort.csv",stringsAsFactors = F)
retrospectiveseq = retrospectiveseq %>% filter(is.na(id) == FALSE)
swimlung = read.csv("../../Misc/lungswim.csv",stringsAsFactors = F)
swimlung$time = swimlung$time/365
swimlung = swimlung %>% filter(is.na(ptid) == FALSE)
swimliver = read.csv("../../Misc/liverswim.csv",stringsAsFactors = F)
swimliver$time = swimliver$time/365
liverstatus = read.csv("../../Misc/liverstatus.csv",stringsAsFactors = F)
liverstatus$last = liverstatus$last/365
liverstatus = liverstatus %>% filter(is.na(ptid) == FALSE)
lungstatus = read.csv("../../Misc/lungstatus.csv",stringsAsFactors = F)
lungstatus$last = lungstatus$last/365
lungstatus = lungstatus %>% filter(is.na(ptid) == FALSE)
liverrecur2 = read.csv("../../Misc/liverrecur2.csv",stringsAsFactors = F)
liverrecur2$time = liverrecur2$time/365
liverrecur2 = liverrecur2 %>% filter(is.na(ptid) == FALSE)
lungrecur2 = read.csv("../../Misc/lungrecur2.csv",stringsAsFactors = F)
lungrecur2$time = lungrecur2$time/365
lungrecur2 = lungrecur2 %>% filter(is.na(ptid) == FALSE)
#formatting dates
retrospective$last_follow_up = mdy(retrospective$last_follow_up)
retrospective$dx_date = mdy(retrospective$dx_date)
retrospective$recur_date = mdy(retrospective$recur_date)
retrospective$sx_date = mdy(retrospective$sx_date)
retrospective$days_to_last_followup = retrospective$last_follow_up - retrospective$dx_date
retrospective$surg_to_last_followup = retrospective$last_follow_up - retrospective$sx_date
retrospective$days_to_recurrance = retrospective$recur_date - retrospective$dx_date
retrospective$surg_to_recurrance = retrospective$recur_date - retrospective$sx_date
retrospective$days_to_surgery = retrospective$sx_date - retrospective$dx_date
retrospective$days_to_recurrance[is.na(retrospective$days_to_recurrance)] <- 100000
retrospective$days_to_recurrance_or_death = pmin(retrospective$days_to_recurrance,retrospective$days_to_last_followup)
retrospective$surg_to_recurrance_or_death = pmin(retrospective$surg_to_recurrance,retrospective$surg_to_last_followup)
retrospective$recurrence_to_last_fu = retrospective$last_follow_up - retrospective$recur_date
retrospectiveseq$last_follow_up = mdy(retrospectiveseq$last_follow_up)
retrospectiveseq$dx_date = mdy(retrospectiveseq$dx_date)
retrospectiveseq$recur_date = mdy(retrospectiveseq$recur_date)
retrospectiveseq$sx_date = mdy(retrospectiveseq$sx_date)
retrospectiveseq$days_to_last_followup = retrospectiveseq$last_follow_up - retrospectiveseq$dx_date
retrospectiveseq$surg_to_last_followup = retrospectiveseq$last_follow_up - retrospectiveseq$sx_date
retrospectiveseq$days_to_recurrance = retrospectiveseq$recur_date - retrospectiveseq$dx_date
retrospectiveseq$surg_to_recurrance = retrospectiveseq$recur_date - retrospectiveseq$sx_date
retrospectiveseq$days_to_surgery = retrospectiveseq$sx_date - retrospectiveseq$dx_date
retrospectiveseq$days_to_recurrance[is.na(retrospectiveseq$days_to_recurrance)] <- 100000
retrospectiveseq$days_to_recurrance_or_death = pmin(retrospectiveseq$days_to_recurrance,retrospectiveseq$days_to_last_followup)
retrospectiveseq$surg_to_recurrance_or_death = pmin(retrospectiveseq$surg_to_recurrance,retrospectiveseq$surg_to_last_followup)
retrospectiveseq$recurrence_to_last_fu = retrospectiveseq$last_follow_up - retrospectiveseq$recur_date
#adding "status" column
retrospective$status = 0
retrospective$status[retrospective$vital_status == "dead"] = 1
retrospective$recur_status = pmax(retrospective$recur,retrospective$status)
retrospectiveseq$status = 0
retrospectiveseq$status[retrospectiveseq$vital_status == "dead"] = 1
retrospectiveseq$recur_status = pmax(retrospectiveseq$recur,retrospectiveseq$status)
knitr::opts_chunk$set(echo = TRUE)
#Load packages
library(lubridate)
library(survival)
library(ggplot2)
library(ggfortify)
library(ranger)
library(dplyr)
library(zip)
library(ggpubr)
library(survminer)
library(swimplot)
library(scales)
#Uploading data
retrospective = read.csv("../../Misc/fullcohort.csv",stringsAsFactors = F)
retrospective = retrospective %>% filter(is.na(id) == FALSE)
retrospectiveseq = read.csv("../../Misc/seqcohort.csv",stringsAsFactors = F)
retrospectiveseq = retrospectiveseq %>% filter(is.na(id) == FALSE)
swimlung = read.csv("../../Misc/lungswim.csv",stringsAsFactors = F)
swimlung$time = swimlung$time/365
swimlung = swimlung %>% filter(is.na(ptid) == FALSE)
swimliver = read.csv("../../Misc/liverswim.csv",stringsAsFactors = F)
swimliver$time = swimliver$time/365
liverstatus = read.csv("../../Misc/liverstatus.csv",stringsAsFactors = F)
liverstatus$last = liverstatus$last/365
liverstatus = liverstatus %>% filter(is.na(ptid) == FALSE)
lungstatus = read.csv("../../Misc/lungstatus.csv",stringsAsFactors = F)
lungstatus$last = lungstatus$last/365
lungstatus = lungstatus %>% filter(is.na(ptid) == FALSE)
liverrecur2 = read.csv("../../Misc/liverrecur2.csv",stringsAsFactors = F)
liverrecur2$time = liverrecur2$time/365
liverrecur2 = liverrecur2 %>% filter(is.na(ptid) == FALSE)
lungrecur2 = read.csv("../../Misc/lungrecur2.csv",stringsAsFactors = F)
lungrecur2$time = lungrecur2$time/365
lungrecur2 = lungrecur2 %>% filter(is.na(ptid) == FALSE)
#formatting dates
retrospective$last_follow_up = mdy(retrospective$last_follow_up)
retrospective$dx_date = mdy(retrospective$dx_date)
retrospective$recur_date = mdy(retrospective$recur_date)
retrospective$sx_date = mdy(retrospective$sx_date)
retrospective$days_to_last_followup = retrospective$last_follow_up - retrospective$dx_date
retrospective$surg_to_last_followup = retrospective$last_follow_up - retrospective$sx_date
retrospective$days_to_recurrance = retrospective$recur_date - retrospective$dx_date
retrospective$surg_to_recurrance = retrospective$recur_date - retrospective$sx_date
retrospective$days_to_surgery = retrospective$sx_date - retrospective$dx_date
retrospective$days_to_recurrance[is.na(retrospective$days_to_recurrance)] <- 100000
retrospective$days_to_recurrance_or_death = pmin(retrospective$days_to_recurrance,retrospective$days_to_last_followup)
retrospective$surg_to_recurrance_or_death = pmin(retrospective$surg_to_recurrance,retrospective$surg_to_last_followup)
retrospective$recurrence_to_last_fu = retrospective$last_follow_up - retrospective$recur_date
retrospectiveseq$last_follow_up = mdy(retrospectiveseq$last_follow_up)
retrospectiveseq$dx_date = mdy(retrospectiveseq$dx_date)
retrospectiveseq$recur_date = mdy(retrospectiveseq$recur_date)
retrospectiveseq$sx_date = mdy(retrospectiveseq$sx_date)
retrospectiveseq$days_to_last_followup = retrospectiveseq$last_follow_up - retrospectiveseq$dx_date
retrospectiveseq$surg_to_last_followup = retrospectiveseq$last_follow_up - retrospectiveseq$sx_date
retrospectiveseq$days_to_recurrance = retrospectiveseq$recur_date - retrospectiveseq$dx_date
retrospectiveseq$surg_to_recurrance = retrospectiveseq$recur_date - retrospectiveseq$sx_date
retrospectiveseq$days_to_surgery = retrospectiveseq$sx_date - retrospectiveseq$dx_date
retrospectiveseq$days_to_recurrance[is.na(retrospectiveseq$days_to_recurrance)] <- 100000
retrospectiveseq$days_to_recurrance_or_death = pmin(retrospectiveseq$days_to_recurrance,retrospectiveseq$days_to_last_followup)
retrospectiveseq$surg_to_recurrance_or_death = pmin(retrospectiveseq$surg_to_recurrance,retrospectiveseq$surg_to_last_followup)
retrospectiveseq$recurrence_to_last_fu = retrospectiveseq$last_follow_up - retrospectiveseq$recur_date
#adding "status" column
retrospective$status = 0
retrospective$status[retrospective$vital_status == "dead"] = 1
retrospective$recur_status = pmax(retrospective$recur,retrospective$status)
retrospectiveseq$status = 0
retrospectiveseq$status[retrospectiveseq$vital_status == "dead"] = 1
retrospectiveseq$recur_status = pmax(retrospectiveseq$recur,retrospectiveseq$status)
#Swimmer Plots
swimmer_plot(df=swimlung,id='ptid',end='time',name_fill='interval',col="black",alpha=0.75,width=.8) + swimmer_points(df_points=lungrecur2,id='ptid',time='time', name_shape ='further_recur',size=2.5,fill='white',col='black') + scale_y_continuous(name = "Years", breaks = c(0,1,2,3,4,5,6,7,8,9,10)) +
swimmer_arrows(df_arrows=lungstatus,id='ptid',arrow_start='last', name_col='vital_status',type = "open",cex=1)
swimmer_plot(df=swimliver,id='ptid',end='time',name_fill='interval',col="black",alpha=0.75,width=.8) + swimmer_points(df_points=liverrecur2,id='ptid', time='time',name_shape ='further_recur',size=2.5,fill='white',col='black') + scale_y_continuous(name = "Years", breaks = c(0,1,2,3,4,5,6,7,8,9,10)) +
swimmer_arrows(df_arrows=liverstatus,id='ptid',arrow_start='last', name_col='vital_status',type = "open",cex=1)
#Lung liver KM curves
retrospective_recur_lung = retrospective %>% filter(recur_site == "lung")
retrospective_recur_liver = retrospective %>% filter(recur_site == "liver")
# KM OS recurrence site, days from diagnosis
# create a survival object
dt_ = rbind(retrospective_recur_lung,retrospective_recur_liver)
s_obj = with(dt_, Surv(days_to_last_followup/365, status))
# fit survival curves using survfit()
km_recur_site <- survfit(s_obj ~ recur_site, data = dt_)
# perform a log-rank test using survdiff() to get the p-value
test <- survdiff(s_obj ~ recur_site, data = dt_)
# extract the p-value
p_value <- 1 - pchisq(test$chisq, length(test$n) - 1)
p_value = (paste("log-rank test p-value:", format(p_value, scientific = T)))
# plotting
summary(km_recur_site, times = c(0,1*(1:7)))
plot(km_recur_site,conf.int = FALSE,xlim = c(0,7), ylim = c(0,1), col = c("red","blue","green","purple"),ylab = "% survival",xlab = "years",mark.time = TRUE, cex = 0.5,yscale = 100,xaxs = "S", main = p_value)
#KM RFS recurrence site, days from diagnosis
# create a survival object
dt_ = rbind(retrospective_recur_lung,retrospective_recur_liver)
s_obj = with(dt_, Surv(days_to_recurrance_or_death/365, recur_status))
# fit survival curves using survfit()
km_rfs_recur_site <- survfit(s_obj ~ recur_site, data = dt_)
# perform a log-rank test using survdiff() to get the p-value
test <- survdiff(s_obj ~ recur_site, data = dt_)
# extract the p-value
p_value <- 1 - pchisq(test$chisq, length(test$n) - 1)
p_value = (paste("log-rank test p-value:", format(p_value, scientific = T)))
# plotting
summary(km_rfs_recur_site, times = c(0,1*(1:7)))
plot(km_rfs_recur_site,conf.int = FALSE,xlim = c(0,7), ylim = c(0,1), col = c("red","blue","green","purple"),ylab = "% survival",xlab = "years",mark.time = TRUE, cex = 0.5,yscale = 100,xaxs = "S", main = p_value)
#Lung liver KM curves seq cohort
retrospective_recur_lung_seq = retrospectiveseq %>% filter(recur_site == "lung")
retrospective_recur_liver_seq = retrospectiveseq %>% filter(recur_site == "liver")
#KM OS recurrence site, days from diagnosis seq cohort
# create a survival object
dt_ = rbind(retrospective_recur_lung_seq,retrospective_recur_liver_seq)
s_obj = with(dt_, Surv(days_to_last_followup/365, status))
# fit survival curves using survfit()
km_recur_site_seq <- survfit(s_obj ~ recur_site, data = dt_)
# perform a log-rank test using survdiff() to get the p-value
test <- survdiff(s_obj ~ recur_site, data = dt_)
# extract the p-value
p_value <- 1 - pchisq(test$chisq, length(test$n) - 1)
p_value = (paste("log-rank test p-value:", format(p_value, scientific = T)))
# plotting
summary(km_recur_site_seq, times = c(0,1*(1:7)))
plot(km_recur_site_seq,conf.int = FALSE,xlim = c(0,7), ylim = c(0,1), col = c("red","blue","green","purple"),ylab = "% survival",xlab = "years",mark.time = TRUE, cex = 0.5,yscale = 100,xaxs = "S", main = p_value)
#KM RFS recurrence site, days from diagnosis seq cohort
# create a survival object
dt_ = rbind(retrospective_recur_lung_seq,retrospective_recur_liver_seq)
s_obj = with(dt_, Surv(days_to_recurrance_or_death/365, recur_status))
# fit survival curves using survfit()
km_rfs_recur_site_seq <- survfit(s_obj ~ recur_site, data = dt_)
# perform a log-rank test using survdiff() to get the p-value
test <- survdiff(s_obj ~ recur_site, data = dt_)
# extract the p-value
p_value <- 1 - pchisq(test$chisq, length(test$n) - 1)
p_value = (paste("log-rank test p-value:", format(p_value, scientific = T)))
# plotting
summary(km_rfs_recur_site_seq, times = c(0,1*(1:7)))
plot(km_rfs_recur_site_seq,conf.int = FALSE,xlim = c(0,7), ylim = c(0,1), col = c("red","blue","green","purple"),ylab = "% survival",xlab = "years",mark.time = TRUE, cex = 0.5,yscale = 100,xaxs = "S", main = p_value)
#KM OS recurrence site, days from diagnosis seq cohort
# create a survival object
dt_ = rbind(retrospective_recur_lung_seq,retrospective_recur_liver_seq)
knitr::opts_chunk$set(echo = TRUE)
#Load packages
library(lubridate)
library(survival)
library(ggplot2)
library(ggfortify)
library(ranger)
library(dplyr)
library(zip)
library(ggpubr)
library(survminer)
library(swimplot)
library(scales)
#Uploading data
retrospective = read.csv("../../Misc/fullcohort.csv",stringsAsFactors = F)
retrospective = retrospective %>% filter(is.na(id) == FALSE)
retrospectiveseq = read.csv("../../Misc/seqcohort.csv",stringsAsFactors = F)
retrospectiveseq = retrospectiveseq %>% filter(is.na(id) == FALSE)
swimlung = read.csv("../../Misc/lungswim.csv",stringsAsFactors = F)
swimlung$time = swimlung$time/365
swimlung = swimlung %>% filter(is.na(ptid) == FALSE)
swimliver = read.csv("../../Misc/liverswim.csv",stringsAsFactors = F)
swimliver$time = swimliver$time/365
liverstatus = read.csv("../../Misc/liverstatus.csv",stringsAsFactors = F)
liverstatus$last = liverstatus$last/365
liverstatus = liverstatus %>% filter(is.na(ptid) == FALSE)
lungstatus = read.csv("../../Misc/lungstatus.csv",stringsAsFactors = F)
lungstatus$last = lungstatus$last/365
lungstatus = lungstatus %>% filter(is.na(ptid) == FALSE)
liverrecur2 = read.csv("../../Misc/liverrecur2.csv",stringsAsFactors = F)
liverrecur2$time = liverrecur2$time/365
liverrecur2 = liverrecur2 %>% filter(is.na(ptid) == FALSE)
lungrecur2 = read.csv("../../Misc/lungrecur2.csv",stringsAsFactors = F)
lungrecur2$time = lungrecur2$time/365
lungrecur2 = lungrecur2 %>% filter(is.na(ptid) == FALSE)
#formatting dates
retrospective$last_follow_up = mdy(retrospective$last_follow_up)
retrospective$dx_date = mdy(retrospective$dx_date)
retrospective$recur_date = mdy(retrospective$recur_date)
retrospective$sx_date = mdy(retrospective$sx_date)
retrospective$days_to_last_followup = retrospective$last_follow_up - retrospective$dx_date
retrospective$surg_to_last_followup = retrospective$last_follow_up - retrospective$sx_date
retrospective$days_to_recurrance = retrospective$recur_date - retrospective$dx_date
retrospective$surg_to_recurrance = retrospective$recur_date - retrospective$sx_date
retrospective$days_to_surgery = retrospective$sx_date - retrospective$dx_date
retrospective$days_to_recurrance[is.na(retrospective$days_to_recurrance)] <- 100000
retrospective$days_to_recurrance_or_death = pmin(retrospective$days_to_recurrance,retrospective$days_to_last_followup)
retrospective$surg_to_recurrance_or_death = pmin(retrospective$surg_to_recurrance,retrospective$surg_to_last_followup)
retrospective$recurrence_to_last_fu = retrospective$last_follow_up - retrospective$recur_date
retrospectiveseq$last_follow_up = mdy(retrospectiveseq$last_follow_up)
retrospectiveseq$dx_date = mdy(retrospectiveseq$dx_date)
retrospectiveseq$recur_date = mdy(retrospectiveseq$recur_date)
retrospectiveseq$sx_date = mdy(retrospectiveseq$sx_date)
retrospectiveseq$days_to_last_followup = retrospectiveseq$last_follow_up - retrospectiveseq$dx_date
retrospectiveseq$surg_to_last_followup = retrospectiveseq$last_follow_up - retrospectiveseq$sx_date
retrospectiveseq$days_to_recurrance = retrospectiveseq$recur_date - retrospectiveseq$dx_date
retrospectiveseq$surg_to_recurrance = retrospectiveseq$recur_date - retrospectiveseq$sx_date
retrospectiveseq$days_to_surgery = retrospectiveseq$sx_date - retrospectiveseq$dx_date
retrospectiveseq$days_to_recurrance[is.na(retrospectiveseq$days_to_recurrance)] <- 100000
retrospectiveseq$days_to_recurrance_or_death = pmin(retrospectiveseq$days_to_recurrance,retrospectiveseq$days_to_last_followup)
retrospectiveseq$surg_to_recurrance_or_death = pmin(retrospectiveseq$surg_to_recurrance,retrospectiveseq$surg_to_last_followup)
retrospectiveseq$recurrence_to_last_fu = retrospectiveseq$last_follow_up - retrospectiveseq$recur_date
#adding "status" column
retrospective$status = 0
retrospective$status[retrospective$vital_status == "dead"] = 1
retrospective$recur_status = pmax(retrospective$recur,retrospective$status)
retrospectiveseq$status = 0
retrospectiveseq$status[retrospectiveseq$vital_status == "dead"] = 1
retrospectiveseq$recur_status = pmax(retrospectiveseq$recur,retrospectiveseq$status)
#Swimmer Plots
swimmer_plot(df=swimlung,id='ptid',end='time',name_fill='interval',col="black",alpha=0.75,width=.8) + swimmer_points(df_points=lungrecur2,id='ptid',time='time', name_shape ='further_recur',size=2.5,fill='white',col='black') + scale_y_continuous(name = "Years", breaks = c(0,1,2,3,4,5,6,7,8,9,10)) +
swimmer_arrows(df_arrows=lungstatus,id='ptid',arrow_start='last', name_col='vital_status',type = "open",cex=1)
swimmer_plot(df=swimliver,id='ptid',end='time',name_fill='interval',col="black",alpha=0.75,width=.8) + swimmer_points(df_points=liverrecur2,id='ptid', time='time',name_shape ='further_recur',size=2.5,fill='white',col='black') + scale_y_continuous(name = "Years", breaks = c(0,1,2,3,4,5,6,7,8,9,10)) +
swimmer_arrows(df_arrows=liverstatus,id='ptid',arrow_start='last', name_col='vital_status',type = "open",cex=1)
#Lung liver KM curves
retrospective_recur_lung = retrospective %>% filter(recur_site == "lung")
retrospective_recur_liver = retrospective %>% filter(recur_site == "liver")
# KM OS recurrence site, days from diagnosis
# create a survival object
dt_ = rbind(retrospective_recur_lung,retrospective_recur_liver)
s_obj = with(dt_, Surv(days_to_last_followup/365, status))
# fit survival curves using survfit()
km_recur_site <- survfit(s_obj ~ recur_site, data = dt_)
# perform a log-rank test using survdiff() to get the p-value
test <- survdiff(s_obj ~ recur_site, data = dt_)
# extract the p-value
p_value <- 1 - pchisq(test$chisq, length(test$n) - 1)
p_value = (paste("log-rank test p-value:", format(p_value, scientific = T)))
# plotting
summary(km_recur_site, times = c(0,1*(1:7)))
plot(km_recur_site,conf.int = FALSE,xlim = c(0,7), ylim = c(0,1), col = c("red","blue","green","purple"),ylab = "% survival",xlab = "years",mark.time = TRUE, cex = 0.5,yscale = 100,xaxs = "S", main = p_value)
#KM RFS recurrence site, days from diagnosis
# create a survival object
dt_ = rbind(retrospective_recur_lung,retrospective_recur_liver)
s_obj = with(dt_, Surv(days_to_recurrance_or_death/365, recur_status))
# fit survival curves using survfit()
km_rfs_recur_site <- survfit(s_obj ~ recur_site, data = dt_)
# perform a log-rank test using survdiff() to get the p-value
test <- survdiff(s_obj ~ recur_site, data = dt_)
# extract the p-value
p_value <- 1 - pchisq(test$chisq, length(test$n) - 1)
p_value = (paste("log-rank test p-value:", format(p_value, scientific = T)))
# plotting
summary(km_rfs_recur_site, times = c(0,1*(1:7)))
plot(km_rfs_recur_site,conf.int = FALSE,xlim = c(0,7), ylim = c(0,1), col = c("red","blue","green","purple"),ylab = "% survival",xlab = "years",mark.time = TRUE, cex = 0.5,yscale = 100,xaxs = "S", main = p_value)
#Lung liver KM curves seq cohort
retrospective_recur_lung_seq = retrospectiveseq %>% filter(recur_site == "lung")
retrospective_recur_liver_seq = retrospectiveseq %>% filter(recur_site == "liver")
#KM OS recurrence site, days from diagnosis seq cohort
# create a survival object
dt_ = rbind(retrospective_recur_lung_seq,retrospective_recur_liver_seq)
s_obj = with(dt_, Surv(days_to_last_followup/365, status))
# fit survival curves using survfit()
km_recur_site_seq <- survfit(s_obj ~ recur_site, data = dt_)
# perform a log-rank test using survdiff() to get the p-value
test <- survdiff(s_obj ~ recur_site, data = dt_)
# extract the p-value
p_value <- 1 - pchisq(test$chisq, length(test$n) - 1)
p_value = (paste("log-rank test p-value:", format(p_value, scientific = T)))
# plotting
summary(km_recur_site_seq, times = c(0,1*(1:7)))
plot(km_recur_site_seq,conf.int = FALSE,xlim = c(0,7), ylim = c(0,1), col = c("red","blue","green","purple"),ylab = "% survival",xlab = "years",mark.time = TRUE, cex = 0.5,yscale = 100,xaxs = "S", main = p_value)
#KM RFS recurrence site, days from diagnosis seq cohort
# create a survival object
dt_ = rbind(retrospective_recur_lung_seq,retrospective_recur_liver_seq)
s_obj = with(dt_, Surv(days_to_recurrance_or_death/365, recur_status))
# fit survival curves using survfit()
km_rfs_recur_site_seq <- survfit(s_obj ~ recur_site, data = dt_)
# perform a log-rank test using survdiff() to get the p-value
test <- survdiff(s_obj ~ recur_site, data = dt_)
# extract the p-value
p_value <- 1 - pchisq(test$chisq, length(test$n) - 1)
p_value = (paste("log-rank test p-value:", format(p_value, scientific = T)))
# plotting
summary(km_rfs_recur_site_seq, times = c(0,1*(1:7)))
plot(km_rfs_recur_site_seq,conf.int = FALSE,xlim = c(0,7), ylim = c(0,1), col = c("red","blue","green","purple"),ylab = "% survival",xlab = "years",mark.time = TRUE, cex = 0.5,yscale = 100,xaxs = "S", main = p_value)
knitr::opts_chunk$set(echo = TRUE)
#Load packages
library(lubridate)
library(survival)
library(ggplot2)
library(ggfortify)
library(ranger)
library(dplyr)
library(zip)
library(ggpubr)
library(survminer)
library(swimplot)
library(scales)
knitr::opts_chunk$set(echo = TRUE)
#Load packages
library(lubridate)
library(survival)
library(ggplot2)
library(ggfortify)
library(ranger)
library(dplyr)
library(zip)
library(ggpubr)
library(survminer)
library(swimplot)
library(scales)
#Uploading data
retrospective = read.csv("../../Misc/fullcohort.csv",stringsAsFactors = F)
retrospective = retrospective %>% filter(is.na(id) == FALSE)
retrospectiveseq = read.csv("../../Misc/seqcohort.csv",stringsAsFactors = F)
retrospectiveseq = retrospectiveseq %>% filter(is.na(id) == FALSE)
swimlung = read.csv("../../Misc/lungswim.csv",stringsAsFactors = F)
swimlung$time = swimlung$time/365
swimlung = swimlung %>% filter(is.na(ptid) == FALSE)
swimliver = read.csv("../../Misc/liverswim.csv",stringsAsFactors = F)
swimliver$time = swimliver$time/365
liverstatus = read.csv("../../Misc/liverstatus.csv",stringsAsFactors = F)
liverstatus$last = liverstatus$last/365
liverstatus = liverstatus %>% filter(is.na(ptid) == FALSE)
lungstatus = read.csv("../../Misc/lungstatus.csv",stringsAsFactors = F)
lungstatus$last = lungstatus$last/365
lungstatus = lungstatus %>% filter(is.na(ptid) == FALSE)
liverrecur2 = read.csv("../../Misc/liverrecur2.csv",stringsAsFactors = F)
liverrecur2$time = liverrecur2$time/365
liverrecur2 = liverrecur2 %>% filter(is.na(ptid) == FALSE)
lungrecur2 = read.csv("../../Misc/lungrecur2.csv",stringsAsFactors = F)
lungrecur2$time = lungrecur2$time/365
lungrecur2 = lungrecur2 %>% filter(is.na(ptid) == FALSE)
#formatting dates
retrospective$last_follow_up = mdy(retrospective$last_follow_up)
retrospective$dx_date = mdy(retrospective$dx_date)
retrospective$recur_date = mdy(retrospective$recur_date)
retrospective$sx_date = mdy(retrospective$sx_date)
retrospective$days_to_last_followup = retrospective$last_follow_up - retrospective$dx_date
retrospective$surg_to_last_followup = retrospective$last_follow_up - retrospective$sx_date
retrospective$days_to_recurrance = retrospective$recur_date - retrospective$dx_date
retrospective$surg_to_recurrance = retrospective$recur_date - retrospective$sx_date
retrospective$days_to_surgery = retrospective$sx_date - retrospective$dx_date
retrospective$days_to_recurrance[is.na(retrospective$days_to_recurrance)] <- 100000
retrospective$days_to_recurrance_or_death = pmin(retrospective$days_to_recurrance,retrospective$days_to_last_followup)
retrospective$surg_to_recurrance_or_death = pmin(retrospective$surg_to_recurrance,retrospective$surg_to_last_followup)
retrospective$recurrence_to_last_fu = retrospective$last_follow_up - retrospective$recur_date
retrospectiveseq$last_follow_up = mdy(retrospectiveseq$last_follow_up)
retrospectiveseq$dx_date = mdy(retrospectiveseq$dx_date)
retrospectiveseq$recur_date = mdy(retrospectiveseq$recur_date)
retrospectiveseq$sx_date = mdy(retrospectiveseq$sx_date)
retrospectiveseq$days_to_last_followup = retrospectiveseq$last_follow_up - retrospectiveseq$dx_date
retrospectiveseq$surg_to_last_followup = retrospectiveseq$last_follow_up - retrospectiveseq$sx_date
retrospectiveseq$days_to_recurrance = retrospectiveseq$recur_date - retrospectiveseq$dx_date
retrospectiveseq$surg_to_recurrance = retrospectiveseq$recur_date - retrospectiveseq$sx_date
retrospectiveseq$days_to_surgery = retrospectiveseq$sx_date - retrospectiveseq$dx_date
retrospectiveseq$days_to_recurrance[is.na(retrospectiveseq$days_to_recurrance)] <- 100000
retrospectiveseq$days_to_recurrance_or_death = pmin(retrospectiveseq$days_to_recurrance,retrospectiveseq$days_to_last_followup)
retrospectiveseq$surg_to_recurrance_or_death = pmin(retrospectiveseq$surg_to_recurrance,retrospectiveseq$surg_to_last_followup)
retrospectiveseq$recurrence_to_last_fu = retrospectiveseq$last_follow_up - retrospectiveseq$recur_date
#adding "status" column
retrospective$status = 0
retrospective$status[retrospective$vital_status == "dead"] = 1
retrospective$recur_status = pmax(retrospective$recur,retrospective$status)
retrospectiveseq$status = 0
retrospectiveseq$status[retrospectiveseq$vital_status == "dead"] = 1
retrospectiveseq$recur_status = pmax(retrospectiveseq$recur,retrospectiveseq$status)
#Swimmer Plots
swimmer_plot(df=swimlung,id='ptid',end='time',name_fill='interval',col="black",alpha=0.75,width=.8) + swimmer_points(df_points=lungrecur2,id='ptid',time='time', name_shape ='further_recur',size=2.5,fill='white',col='black') + scale_y_continuous(name = "Years", breaks = c(0,1,2,3,4,5,6,7,8,9,10)) +
swimmer_arrows(df_arrows=lungstatus,id='ptid',arrow_start='last', name_col='vital_status',type = "open",cex=1)
swimmer_plot(df=swimliver,id='ptid',end='time',name_fill='interval',col="black",alpha=0.75,width=.8) + swimmer_points(df_points=liverrecur2,id='ptid', time='time',name_shape ='further_recur',size=2.5,fill='white',col='black') + scale_y_continuous(name = "Years", breaks = c(0,1,2,3,4,5,6,7,8,9,10)) +
swimmer_arrows(df_arrows=liverstatus,id='ptid',arrow_start='last', name_col='vital_status',type = "open",cex=1)
#Lung liver KM curves
retrospective_recur_lung = retrospective %>% filter(recur_site == "lung")
retrospective_recur_liver = retrospective %>% filter(recur_site == "liver")
# KM OS recurrence site, days from diagnosis
# create a survival object
dt_ = rbind(retrospective_recur_lung,retrospective_recur_liver)
s_obj = with(dt_, Surv(days_to_last_followup/365, status))
# fit survival curves using survfit()
km_recur_site <- survfit(s_obj ~ recur_site, data = dt_)
# perform a log-rank test using survdiff() to get the p-value
test <- survdiff(s_obj ~ recur_site, data = dt_)
# extract the p-value
p_value <- 1 - pchisq(test$chisq, length(test$n) - 1)
p_value = (paste("log-rank test p-value:", format(p_value, scientific = T)))
# plotting
summary(km_recur_site, times = c(0,1*(1:7)))
plot(km_recur_site,conf.int = FALSE,xlim = c(0,7), ylim = c(0,1), col = c("red","blue","green","purple"),ylab = "% survival",xlab = "years",mark.time = TRUE, cex = 0.5,yscale = 100,xaxs = "S", main = p_value)
#KM RFS recurrence site, days from diagnosis
# create a survival object
dt_ = rbind(retrospective_recur_lung,retrospective_recur_liver)
s_obj = with(dt_, Surv(days_to_recurrance_or_death/365, recur_status))
# fit survival curves using survfit()
km_rfs_recur_site <- survfit(s_obj ~ recur_site, data = dt_)
# perform a log-rank test using survdiff() to get the p-value
test <- survdiff(s_obj ~ recur_site, data = dt_)
# extract the p-value
p_value <- 1 - pchisq(test$chisq, length(test$n) - 1)
p_value = (paste("log-rank test p-value:", format(p_value, scientific = T)))
# plotting
summary(km_rfs_recur_site, times = c(0,1*(1:7)))
plot(km_rfs_recur_site,conf.int = FALSE,xlim = c(0,7), ylim = c(0,1), col = c("red","blue","green","purple"),ylab = "% survival",xlab = "years",mark.time = TRUE, cex = 0.5,yscale = 100,xaxs = "S", main = p_value)
#Lung liver KM curves seq cohort
retrospective_recur_lung_seq = retrospectiveseq %>% filter(recur_site == "lung")
retrospective_recur_liver_seq = retrospectiveseq %>% filter(recur_site == "liver")
#KM OS recurrence site, days from diagnosis seq cohort
# create a survival object
dt_ = rbind(retrospective_recur_lung_seq,retrospective_recur_liver_seq)
s_obj = with(dt_, Surv(days_to_last_followup/365, status))
# fit survival curves using survfit()
km_recur_site_seq <- survfit(s_obj ~ recur_site, data = dt_)
# perform a log-rank test using survdiff() to get the p-value
test <- survdiff(s_obj ~ recur_site, data = dt_)
# extract the p-value
p_value <- 1 - pchisq(test$chisq, length(test$n) - 1)
p_value = (paste("log-rank test p-value:", format(p_value, scientific = T)))
# plotting
summary(km_recur_site_seq, times = c(0,1*(1:7)))
plot(km_recur_site_seq,conf.int = FALSE,xlim = c(0,7), ylim = c(0,1), col = c("red","blue","green","purple"),ylab = "% survival",xlab = "years",mark.time = TRUE, cex = 0.5,yscale = 100,xaxs = "S", main = p_value)
#KM RFS recurrence site, days from diagnosis seq cohort
# create a survival object
dt_ = rbind(retrospective_recur_lung_seq,retrospective_recur_liver_seq)
s_obj = with(dt_, Surv(days_to_recurrance_or_death/365, recur_status))
# fit survival curves using survfit()
km_rfs_recur_site_seq <- survfit(s_obj ~ recur_site, data = dt_)
# perform a log-rank test using survdiff() to get the p-value
test <- survdiff(s_obj ~ recur_site, data = dt_)
# extract the p-value
p_value <- 1 - pchisq(test$chisq, length(test$n) - 1)
p_value = (paste("log-rank test p-value:", format(p_value, scientific = T)))
# plotting
summary(km_rfs_recur_site_seq, times = c(0,1*(1:7)))
plot(km_rfs_recur_site_seq,conf.int = FALSE,xlim = c(0,7), ylim = c(0,1), col = c("red","blue","green","purple"),ylab = "% survival",xlab = "years",mark.time = TRUE, cex = 0.5,yscale = 100,xaxs = "S", main = p_value)
